@page
@model BookStore.Pages.BookPageModel
@{
    ViewData["Title"] = Model.TakedBook?.Title ?? "deleted";
    int userRating = 0;
    if (User.Identity.IsAuthenticated)
    {
        userRating = Model._serviceRating.GetUserRating(Model.CurrentUser, Model.TakedBook);
    }
}

<div class="content">
    <div class="title-container">
        <img src=@Model.TakedBook.SourceImage alt="Картинка не найдена" />
        <div>
            <div class="title" style="display:flex">
                <h2>@Model.TakedBook.Title</h2>
                @if (User.Identity.IsAuthenticated && (User.IsInRole("admin") || User.IsInRole("creator")))
                {
                    <a href="/Admin/EditBook?Id=@Model.TakedBook.Id"><img class="setting-img" src="/images/server/setting.png" /></a>
                }
            </div>
            <p class="writer">Автор: @Model.TakedBook.Writer</p><br />

            <div class="dropdown-rating">
                <div class="rating-button">
                    <div class="filler" style="height:@($"{Model._serviceRating.GetRating(Model.TakedBook)*20}%")">
                    </div><svg class="rate-star" width="40" height="40">
                        <polygon points="20,0 6,40 40,16 0,16 34,40" style="fill:orange;fill-rule:nonzero;" />
                    </svg>
                </div>
                <div class="rating-droppanel">
                    <div class="rating-number">@Model._serviceRating.GetRating(Model.TakedBook)</div>
                    <div class="rating-count">Оценили: @Model._serviceRating.GetRatingCount(Model.TakedBook)</div>
                    <div class="rate-container">
                        <span>Оцените книгу:</span>
                        <div class="stars-container">
                            <form method="post" style="display:flex">
                                <input name="id" value=@Model.TakedBook.Id hidden />
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <button class="rate-btn" type="submit" name="interact_btn" value=@i>
                                        <svg width="40" height="40">
                                            <polygon class="star-@i star @(userRating >= i ? "taked-star" : "not-taked-star")"
                                                 points="20,0 26,16 40,16 28,25 34,40 20,30 6,40 12,25 0,16 14,16 " />
                                        </svg>
                                    </button>
                                }
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <form method="post" style="display:flex">
                <input name="id" value=@Model.TakedBook.Id hidden />
                @if (User.Identity.IsAuthenticated && Model.CurrentUser.AvailableBooks.Any(book => book.Id == Model.TakedBook.Id))
                {
                    <button class="buy-btn" type="submit" name="interact_btn" value="dwn">Скачать</button>
                }
                else
                {
                    <button class="buy-btn" type="submit" name="interact_btn" value="buy">КУПИТЬ ЗА @Model.TakedBook.Price</button>
                }
                @if (User.Identity.IsAuthenticated)
                {
                    string id = Model.CurrentUser.Favorites.FirstOrDefault(fav => fav.BookId == Model.TakedBook.Id)?.UserId;
                    <button class=@(string.IsNullOrEmpty(id) ? "unfav-btn" : "fav-btn") type="submit" name="interact_btn" value="fav">♡</button>
                }
            </form>

        </div>
    </div>
    <div class="desription-container">

        <p class="description-title">Описание книги</p>
        <p class="description">
            @foreach (string str in @Model.TakedBook.Description.Split('\n'))
            {
                @str
                <br />
            }
        </p>
    </div>
</div>