
@model BookPageModel

@{
    var reviews = Model.TakedBook.Reviews;
    switch ((ViewData["req"] as string)?.ToUpper())
    {
        case "DATE":
            reviews = reviews.OrderByDescending(review => review.Created).ToList();
            break;
        case "POPULARITY":
            reviews = reviews.OrderByDescending(review => review.Rates.Count).ToList();
            break;
    }
}



@foreach (var review in reviews)
{
    var user = Model._serviceUser.GetUser(review.UserId);
    <div class="review-container">
        <div class="review-header">
            <input name="userId" value="@user.Id" hidden />
            <input name="reviewId" value="@review.Id" hidden />
            <a class="review-owner-container" asp-page="/Account/ProfilePage" asp-route-userName="@user.UserName">
                <img class="review-owner-pic" src="@user.ProfilePicture" />
            </a>
            <a class="review-owner-container" asp-page="/Account/ProfilePage" asp-route-userName="@user.UserName">
                <span class="review-owner">@user.UserName</span>
            </a>
            <span class="rating-for-book">
                @for (int i = 0; i < @Model._serviceRating.GetUserRating(user, Model.TakedBook); i++)
                {
                    <svg class="rate-star" width="20" height="20">
                        <polygon points="10,0 17,20 0,8 20,8 3,20" style="fill:orange;fill-rule:nonzero;" />
                    </svg>
                }
            </span>

            @if (user == Model.CurrentUser || User.IsInRole("admin") || User.IsInRole("creator"))
            {
                <button class="delete-review">Удалить рецензию</button>
            }
        </div>
        <span class="created-date">@review.Created</span><br>
        <span style="white-space:pre-wrap" class="review-text">@review.Text.Replace("<br/>", "\n")</span>
        @if (User.Identity.IsAuthenticated)
        {
            var userRate = review.Rates.Find(rate => rate.UserId == Model.CurrentUser.Id);
            bool selectLike = userRate?.Like ?? false;
            bool selectDislike = !userRate?.Like ?? false;
            <div class="rate-review-container">
                <div class="like-container @(selectLike ? "selected" : "")">
                    <div class="like-count">@review.Rates.Count(rate=>rate.Like)</div>
                    <button class="review-like-btn" value="true">👍</button>
                </div>
                <div class="dislike-container @(selectDislike ? "selected" :"" )">
                    <div class="dislike-count">@review.Rates.Count(rate=>!rate.Like)</div>
                    <button class="review-dislike-btn" value="false">👎</button>
                </div>
            </div>
        }
    </div>
}