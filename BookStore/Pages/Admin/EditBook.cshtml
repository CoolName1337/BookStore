@page
@model BookStore.Pages.Admin.EditBookModel
@{
    ViewData["Title"] = "Редактировать книгу";
}
<div class="content">
    <input id="bookId" value="@Model.BookId" hidden/>
    <form id="bookForm" enctype="multipart/form-data">
        <div class="new-book-container show">
            <input name="ChangedBook.SourceFile" type="file" class="input-file" accept=".pdf, .doc, .docx, .fb2" title="файл книги" /><br />
            <input name="ChangedBook.SourceImage" type="file" class="input-book-image" accept="image/png,image/jpeg,image/gif" style="width:0;height:0" />
            <span class="text-danger" asp-validation-for="ChangedBook.SourceFile"></span>
            <div class="handler">
                <div>
                    <img class="book-picture" title="картинка книги" />
                    <span class="text-danger" asp-validation-for="ChangedBook.SourceImage"></span>
                </div>
                <div class="title-container">
                    <label class="data-info">Название</label><br />
                    <input asp-for="ChangedBook.Title" autocomplete="off" class="input-title data" placeholder="Название" /><br />
                    <span class="text-danger" asp-validation-for="ChangedBook.Title"></span><br />

                    <div class="multiselect">
                        <div class="selectBox">
                            Добавить авторов
                        </div>
                        <div class="selectboxes hidden">
                            <input asp-for="ChangedBook.Authors" class="authors-input" hidden />
                            <input class="input-in-box data" placeholder="Писатель..." />
                            @foreach (var author in Model._serviceAuthor.Authors)
                            {
                                <button class="author-select" type="button" value="@author.Id">@author.Name</button>
                            }
                        </div>
                    </div>

                    <div class="multiselect">
                        <div class="selectBox">
                            Добавить жанры
                        </div>
                        <div class="selectboxes hidden">
                            <input asp-for="ChangedBook.Genres" class="genres-input" hidden />
                            <input class="input-in-box data" placeholder="Жанр..." />
                            @foreach (var genre in Model._serviceGenre.GetAll())
                            {
                                <button class="genre-select" type="button" value="@genre.Id">@genre.Value</button>
                            }
                        </div>
                    </div>
                    <label class="data-info">Цена</label><br />
                    <input asp-for="ChangedBook.Price" class="input-price data" placeholder="Цена" /><br />
                    <span class="text-danger" asp-validation-for="ChangedBook.Price"></span><br />
                </div>
            </div>
            <div>
                <label class="data-info">Возрастное ограничение</label><br />
                <input asp-for="ChangedBook.AgeLimit" class="input-age-limit data" placeholder="Возврастное ограничение" /><br />
                <span class="text-danger" asp-validation-for="ChangedBook.AgeLimit"></span><br />
                <label class="data-info">Количество страниц</label><br />
                <input asp-for="ChangedBook.Pages" class="input-pages-count data" placeholder="Количество страниц" /><br />
                <span class="text-danger" asp-validation-for="ChangedBook.Pages"></span><br />
                <label class="data-info">Дата написания</label><br />
                <input asp-for="ChangedBook.DateOfCreation" type="date" class="input-creating-date data" placeholder="Дата создания" /><br />
                <span class="text-danger" asp-validation-for="ChangedBook.DateOfCreation"></span><br />
            </div>
            <label class="data-info">Описание</label>
            <textarea asp-for="ChangedBook.Description" class="input-descr" placeholder="Описание"></textarea><br />
            <span class="text-danger" asp-validation-for="ChangedBook.Description"></span>
            <button class="create-book-btn" type="button">Сохранить</button>
        </div>
    </form>
</div>

@section Styles{
    <link rel="stylesheet" href="~/css/Admin/AdminPageStyles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Admin/EditBookPageStyles.css" asp-append-version="true" />
}

@section Scripts{

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js" integrity="sha512-rstIgDs0xPgmG6RX1Aba4KV5cWJbAMcvRCVmglpam9SoHZiUCyQVDdH2LPlxoHtrv17XWblE/V/PP+Tr04hbtA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js" integrity="sha512-xq+Vm8jC94ynOikewaQXMEkJIOBp7iArs3IhFWSWdRT3Pq8wFz46p+ZDFAR7kHnSFf+zUv52B3prRYnbDRdgog==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>

        $(document).ready(() => {
            $.validator.unobtrusive.parse($("#bookForm"));

            document.getElementsByClassName('book-picture').item(0)
                .addEventListener('click', () => document.querySelector('input.input-book-image').click());

            var genres = $(".genres-input").val().split(";");
            genres.forEach(
                (el) => { 
                    $(".genre-select").each(
                        (ind, elem) => { 
                            if (el == elem.value) elem.classList.add("selected-item") 
                        });
                });
            var authors = $(".authors-input").val().split(";");
            authors.forEach(
                (el) => { 
                    $(".author-select").each(
                        (ind, elem) => { 
                            if (el == elem.value) elem.classList.add("selected-item") 
                        });
                });
        })

        $(document).on("click", ".genre-select", (e) => {
            e.currentTarget.classList.toggle("selected-item");
            if (e.currentTarget.classList.contains("selected-item")) {
                document.querySelector(".genres-input").value += `${$(e.currentTarget).val()};`;
            }
            else {
                $(".genres-input").val($(".genres-input").val().replace(`${$(e.currentTarget).val()};`, ''));
            }
        });
        $(document).on("click", ".author-select", (e) => {
            e.currentTarget.classList.toggle("selected-item");
            if (e.currentTarget.classList.contains("selected-item")) {
                document.querySelector(".authors-input").value += `${$(e.currentTarget).val()};`;
            }
            else {
                $(".authors-input").val($(".authors-input").val().replace(`${$(e.currentTarget).val()};`, ''));
            }
        });

        $(document).on("input", ".input-in-box", (e) => {
            $(e.currentTarget).parent().children("button").each((ind, el) => {
                if ($(el).text().toUpperCase().includes($(e.currentTarget).val().toUpperCase())) {
                    $(el).show()
                }
                else {
                    $(el).hide()
                }
            });
        });

        $(document).on("change", "input.input-book-image", (e) => {
            fr = $("input.input-book-image").prop("files")[0];
            if (fr != null) {
                document.querySelector(".book-picture").src = URL.createObjectURL(fr);
            }
            else {
                document.querySelector(".book-picture").src = "";
            }
        });



        $(document).on("click", ".create-book-btn", (e) => {
            if ($("#bookForm").valid()) {
                $.ajax({
                    url: "EditBook?handler=UpdateBook&id=" + $("#bookId").val(),
                    type: "POST",
                    data: new FormData(document.getElementById("bookForm")),

                    processData: false,
                    contentType: false,

                    beforeSend: (xhr) => {
                        xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    success: (id) => {
                        window.location = `/BookPage?id=${id}`
                    },
                    error: (request, status, error) => {
                        alert(request.responseText);
                    }

                });
            }
        });
    </script>
}