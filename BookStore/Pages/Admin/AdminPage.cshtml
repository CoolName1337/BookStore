@page
@model BookStore.Pages.Admin.AdminPageModel
@{
    ViewData["Title"] = "Admin Page";
}
<div class="admin-nav">
    <button class="admin-button" value="0">
        Добавить книгу
    </button>
    <button class="admin-button" value="1">
        Редактировать жанры
    </button>
</div>
<div class="content">
    <form method="post" enctype="multipart/form-data">
        <span style="color:red">
            @foreach (var ex in Model.ActionResult.Errors)
            {
                <span>@ex</span>

                <br />
            }
        </span>
        <div class="create-container admin-page">
            <input class="input-file data" type="file" name="file" /><br />
            <div class="handler">
                <input class="input-img data" type="file" name="img" />
                <div>
                    <input class="input-title data" name="title" placeholder="Название" value="@Model.CreatedBook.Title" /><br />
                    <input class="input-writer data" name="writer" placeholder="Писатель" value="@Model.CreatedBook.Writer" /><br /><br />


                    <div class="multiselect">
                        <div class="selectBox">
                            Добавить жанры
                        </div>
                        <div class="checkboxes hidden">
                            @foreach (var item in Model._serviceGenre.GetAll())
                            {
                                <label>
                                    <input type="checkbox" name="genres" value=@item.Id />@item.Value
                                </label>
                            }
                        </div>
                    </div>



                    <input class="input-price data" name="price" placeholder="Цена" value="@Model.CreatedBook.Price"/><br />
                    <button class="input-submit create-btn" type="submit">Сохранить</button>
                </div>
            </div>
            <textarea class="input-descr" placeholder="Описание" name="descr">@Model.CreatedBook.Description</textarea><br /><br />
        </div>

    </form>
    <form>
        <div class="edit-genres-container admin-page hidden">
            @Html.AntiForgeryToken()

            <div id="genres">
                <div class="genre-container">
                    <input class="genre-name" id="createGenreInput" />
                    <button class="create-genre genre" type="button" id="add">+</button>
                </div>
            </div>
            <div id="msg"></div>
        </div>
    </form>
</div>


@section Styles{
    <link rel="stylesheet" href="~/css/GenreEditorStyles.css" asp-append-version="true" />
}

@section Scripts{
    <script>


        $(".admin-button").click((e) => {
            $(".admin-page").each((index, el) => $(el).addClass("hidden"));
            document.getElementsByClassName("admin-page").item(e.target.value).classList.remove("hidden");
        });


        $(document).ready(() => {
            $.ajax({
                url: "/Admin/AdminPage?handler=SelectAll",
                type: "GET",
                dataType: "json",
                contentType: "application/json",
                success: (data) => {
                    data.forEach((genre) => {
                        $("#genres").append('<div class="genre-container"><label class="genre-name">' +
                            genre.value + '</label><button type="button" class="remove-genre genre" name="delete" value = "' +
                            genre.value + '">╳</button></div>');
                    });
                },
                error: () => {
                    $("#msg").html("Error while making Ajax call!");
                }
            });

        });


        $("#add").click(() => {
            $.ajax({
                url: "/Admin/AdminPage?handler=Create&genreName=" + $("#createGenreInput").val(),
                type: "POST",
                contentType: "application/json",
                beforeSend: (xhr) => {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },

                success: (genre) => {
                    $("#genres").append('<div class="genre-container"><label class="genre-name">' +
                        genre.value + '</label><button type="button" class="remove-genre genre" name="delete" value = "' +
                        genre.value + '">╳</button></div>');
                    $("#msg").html(" ");
                },
                error: () => {
                    $("#msg").html("Такой жанр уже существует");
                }   
            });
        });

        $("body").on("click", "[name='delete']", (e) => {
            $.ajax({
                url: "/Admin/AdminPage?handler=Delete&genreName=" + e.target.value,
                type: "DELETE",
                contentType: "application/json",
                beforeSend: (xhr) => {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },

                success: (genre) => {
                    $(e.target).parent().remove();
                },
                error: () => {
                    $("#msg").html("error");
                }
            });
        });
    </script>
}

