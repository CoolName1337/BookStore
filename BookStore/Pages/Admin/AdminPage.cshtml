@page
@model BookStore.Pages.Admin.AdminPageModel
@{
    ViewData["Title"] = "Admin Page";
}
@Html.AntiForgeryToken()
<div class="content">
    <div class="genres-container">
        <div class="edit-genres-container">
            <div class="genres-title-container">
                <span class="genres-title">Жанры</span>
                <div class="toggle-genres-container">˅</div>
            </div>
            <div id="genres" class="hidden">
                <div class="genre-container">
                    <input class="genre-name" id="createGenreInput" />
                    <button class="create-genre genre" type="button" id="add">+</button>
                </div>
            </div>
            <div id="msg" style="color:red"></div>
        </div>
    </div>
    <div class="book-container">
        <form method="post" asp-page-handler="CreateBook" enctype="multipart/form-data">
            <span style="color:red">
                @foreach (var ex in Model.ActionResult.Errors)
                {
                    <span>@ex</span>

                    <br />
                }
            </span>
            <div class="create-container">
                <input class="input-file data" accept=".pdf, .doc, .docx, .fb2" type="file" name="file" title="тут файл книги" /><br />
                <div class="handler">
                    <input class="input-img data" accept="image/png,image/jpeg,image/gif" type="file" name="img" title="тут картинка" />
                    <div>
                        <span class="data-info">Наименование</span><br />
                        <input class="input-title data" name="title" placeholder="Название" value="@Model.CreatedBook.Title" /><br />
                        <span class="data-info">Писатель</span><br />
                        <input class="input-writer data" name="writer" placeholder="Писатель" value="@Model.CreatedBook.Writer" /><br /><br />


                        <div class="multiselect">
                            <div class="selectBox">
                                Добавить жанры
                            </div>
                            <div class="checkboxes book-genres hidden">
                                @foreach (var item in Model._serviceGenre.GetAll())
                                {
                                    bool isChecked = Model.CreatedBook.Genres.Contains(item);
                                    <label>
                                        @if(isChecked){
                                            <input type="checkbox" name="genres" value="@item.Id" checked/>@item.Value
                                        }
                                        else{
                                            <input type="checkbox" name="genres" value="@item.Id"/>@item.Value
                                        }

                                    </label>
                                }
                            </div>
                        </div>
                        <span class="data-info">Цена</span><br />
                        <input class="input-price data" name="price" placeholder="Цена" value="@Model.CreatedBook.Price" /><br />
                        <span class="data-info">Возрастное ограничение</span><br />
                        <input class="input-age-limit data" name="ageLimit" placeholder="Возврастное ограничение" value="@Model.CreatedBook.AgeLimit" /><br />
                        <span class="data-info">Количество страниц</span><br />
                        <input class="input-pages-count data" name="pagesCount" placeholder="Количество страниц" value="@Model.CreatedBook.Pages" /><br />
                        <span class="data-info">Дата написания</span><br />
                        <input class="input-creating-date data" type="date" name="creatingDate" placeholder="Дата создания" value="@Model.CreatedBook.DateOfCreation.ToString("yyyy-mm-dd")" /><br />
                    </div>
                </div>
                <textarea class="input-descr" placeholder="Описание" name="descr">@Model.CreatedBook.Description</textarea><br /><br />
                <button class="input-submit create-btn" type="submit">Сохранить</button>
            </div>

        </form>
    </div>

</div>

@section Styles{
    <link rel="stylesheet" href="~/css/Admin/AdminPageStyles.css" asp-append-version="true" />
}

@section Scripts{

    <script>

        var genres;
        $(document).on("input", "input.genre-name", (e) => {
            $('#genres').children().slice(1).remove();
            genres.forEach((genre) => {
                if (genre.value.includes(e.currentTarget.value)) {
                    $("#genres").append('<div class="genre-container"><label class="genre-name">' +
                        genre.value + '</label><button type="button" class="remove-genre genre" name="delete" value = "' +
                        genre.value + '">╳</button></div>');
                }
            });
        });

        $(document).on("click", ".toggle-genres-container", (e)=>{
            $("#genres").toggleClass("hidden");
            $(e.currentTarget).text($(e.currentTarget).text() == "˄" ? "˅" : "˄");
        });

        $(".edit-genres-container").ready(() => {
            $.ajax({
                url: "/Admin/AdminPage?handler=SelectAll",
                type: "GET",
                dataType: "json",
                contentType: "application/json",
                success: (data) => {
                    ResetGenres(data);
                },
                error: () => {
                    $("#msg").html("Error while making Ajax call!");
                }
            });
        });

        function ResetGenres(data){
            genres = data;
            $("#genres").children().slice(1).remove();

            data.forEach((genre) => {
                $("#genres").append('<div class="genre-container"><label class="genre-name">' +
                    genre.value + '</label><button type="button" class="remove-genre genre" name="delete" value = "' +
                    genre.value + '">╳</button></div>');

            });
        }


        $(document).on("click", "#add", () => {
            $.ajax({
                url: "/Admin/AdminPage?handler=Create&genreName=" + $("#createGenreInput").val(),
                type: "POST",
                contentType: "application/json",
                beforeSend: (xhr) => {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },

                success: (data) => {
                    ResetGenres(data); 
                    $(".book-genres").empty();
                    data.forEach((genre) => {
                        $(".book-genres").append(`<label><input type = "checkbox" name = "genres" value = "${genre.id}" />${genre.value}</label>`);
                    });
                    $("#msg").html(" ");
                },
                error: () => {
                    $("#msg").html("Такой жанр уже существует");
                }
            });
        });
        $(document).on("click", "[name='delete']", (e) => {
            $.ajax({
                url: "/Admin/AdminPage?handler=Delete&genreName=" + e.target.value,
                type: "DELETE",
                contentType: "application/json",
                beforeSend: (xhr) => {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },

                success: (data) => {
                    ResetGenres(data); 
                    $(".book-genres").empty();
                    data.forEach((genre) => {
                        $(".book-genres").append(`<label><input type = "checkbox" name = "genres" value = "${genre.id}" />${genre.value}</label>`);
                    });
                    
                },
                error: () => {
                    $("#msg").html("error");
                }
            });
        });

    </script>

    <script src="/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
}

