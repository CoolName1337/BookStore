<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="icon" type="image/x-icon" href="~/icon.ico" />

    @*Set auto name for open page*@
    <title>@ViewData["Title"] - BookStore</title>

    @await RenderSectionAsync("Styles", required: false)

    @*general css*@
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    @*is for body of pages (important)*@
    <link rel="stylesheet" href="~/BookStore.styles.css" asp-append-version="true" />
</head>
<body>

    <div class="all-nav-panel">
        <ul class="nav-panel">
            <li>
                <a class="nav-a" asp-page="/Index">BookStore</a>
            </li>
            <li>
                <div class="dropdown-search">
                    <button onclick="myFunction()" class="dropbtn-search show" id="myDropdownBtn">🔍</button>
                    <div id="myDropdown" class="dropdown-content-search">
                        @Html.AntiForgeryToken()

                        <input class="input-search" type="search" name="search" placeholder="Любые ключевые слова..." />
                        <div class="multiselect">
                            <div class="selectBox">
                                Добавить жанры
                            </div>
                            <div class="checkboxes hidden checkboxes-include">
                            </div>
                        </div>

                        <div class="multiselect">
                            <div class="selectBox">
                                Исключить жанры
                            </div>
                            <div class="checkboxes hidden checkboxes-exclude">
                            </div>
                        </div>

                        <button class="btn-search" type="submit">поиск</button>
                    </div>
                </div>
            </li>

            @if (User.Identity.IsAuthenticated)
            {
                <li class="dropdown" style="float:right;">
                    <a class="drop-profile" class="nav-a" asp-page="#">@User.Identity.Name</a>

                    <div class="dropdown-content">
                        <a href="/Account/Favorite">Избранное</a>
                        <a href="/Account/MyBooks">Мои книги</a>
                        @if (User.IsInRole("admin") || User.IsInRole("creator"))
                        {
                            <a asp-page="/Admin/AdminPage">Admin Page</a>
                        }
                        @if (User.IsInRole("creator"))
                        {
                            <a asp-page="/Creator/EditRoles">Управление</a>
                        }
                        <a asp-page="/Account/Logout">Выйти</a>
                    </div>
                </li>
            }
            else
            {
                <li style="float:right">
                    <a asp-page="/Account/Register">Регистрация</a>
                </li>
                <li style="float:right">
                    <a asp-page="/Account/Login">Войти</a>
                </li>
            }
        </ul>

    </div>

    <div class="container">
        <main role="main">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
    <script>
        $(".selectBox").click((e) => {
            $(e.target).parent().children(".checkboxes").toggleClass("hidden");
        });

        $(document).ready(() => {
            $.ajax({
                url: "/Admin/AdminPage?handler=SelectAll",
                type: "GET",
                dataType: "json",
                contentType: "application/json",
                success: (data) => {
                    data.forEach((genre) => {
                        $(".checkboxes-exclude").append('<label><input class="incl-genre" type = "checkbox" name = "excludingGenres" value ="' + genre.id + '"/>' + genre.value + '</label>');
                        $(".checkboxes-include").append('<label><input class="excl-genre" type = "checkbox" name = "includingGenres" value ="' + genre.id + '"/>' + genre.value + '</label>');
                    });
                },
                error: () => {
                    $("#msg").html("Error while making Ajax call!");
                }
            });

        });

        $(".btn-search").click((e) => {
            var incls = [];

            $('input[name="includingGenres"]:checked').each((ind, el) => {
                incls.push(el.value);
            });
            var excls = [];
            $('input[name="excludingGenres"]:checked').each((ind, el) => {
                excls.push(el.value);
            });

            console.log(incls);
            console.log(excls);
            var filter = {
                searchRequest: $(".input-search").val(),
                inclGenres: incls,
                exclGenres: excls
            }
            $.ajax({
                url: "/SearchResult",
                type: "POST",
                data: JSON.stringify(filter),
                dataType: 'json',
                contentType: "application/json",

                beforeSend: (xhr) => {
                    xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: (response) => { },
                error: () => {
                    $("#msg").html("Error while making Ajax call!");
                }
            });
        })

    </script>
</body>
</html>